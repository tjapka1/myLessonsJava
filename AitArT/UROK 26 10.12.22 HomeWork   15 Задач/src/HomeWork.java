public class HomeWork {
          /*
1.      Написать метод, который принимает параметр типа int и возвращает
третью степень этого числа++.

2.      Написать метод, который возвращает значение последнего
разряда числа.     Например:
getLastDigit(175) -> 5
getLastDigit(17) -> 7
getLastDigit(1529) -> 9++

3.      Написать метод, который создает массив из n целых четных
чисел больше или равных заданному числу
 a. Например:
 getEven(n=7, a=4) -> {4,6,8,10,12,14,16}++

4.      Написать метод, который принимает массив целых чисел и
возвращает индекс наибольшего числа в
 этом массиве. Например:
{5, 9, -1, 6, 10, 1, 8} -> 4++

5.      Написать метод, который принимает массив строк и возвращает
самую длинную строку в этом массиве.
Например:
{“John”, “Nicolaus”, “Ann”} -> “Nicolaus”++

6.      Написать метод, который принимает массив Person(String name, int age) и
возвращает самого взрослого человека в этом массиве. Например:
{John 23  , Nicolaus 45, Ann 21} -> Nicolaus 45++

7.      Написать метод, который принимает массив строк вида “Иван Иванов”, т.е. имя и фамилия,
а в качестве результата возвращает массив строк вида «И.Иванов» . Например:
{“Иван Иванов”, “Николай Николаев”, “Петр Петров”} -> {“И.Иванов”, “Н.Николаев”, “П.Петров”}++

8.      Написать метод, который принимает массив строк вида “Иван Иванов”, т.е. имя и фамилия,
 а в качестве результата возвращает массив объектов типа Student{String firstName, String lastName} .++

9.      Дано целое число num. Необходимо написать метод, который посчитает сумму разрядов этого числа. Например: 3459 -> 21


10.   Число называется простым, если делиться без остатка только на единицу или на само себя. Реализовать метод, который выводит n простых чисел. Например:
getPrimeNumbers(10) -> 1   2   3   5   7   11   13   17    19	23 ++


11.    Дан массив строк. Написать метод, который принимает данный массив и параметр boolean flag.
Метод должен возвращать новый массив строк, но, в зависимости от значения flag, метод должен возвращать либо массив,
содержащий все элементы исходного массива с четными индексами, либо, наоборот, с нечетными индексами.
Например:
{“John”, “Nicolaus”, “Ann”}, true -> {“John”, “Ann”}
{“John”, “Nicolaus”, “Ann”}, false -> {“Nicolaus”}

12.     Дан массив целых чисел. Написать метод, который сортирует данный массив в порядке возрастания.
Использовать любой известный вам алгоритм сортировки.++

13.     Дан массив строк. Написать метод, который сортирует данный массив в порядке возрастания длин строк, от самой
короткой до самой длинной. Использовать любой известный вам алгоритм сортировки. (Для решения данной задаче нельзя использовать
встроенные методы сортировки Java )

14.   Дан массив объектов Person(String name, int age). Написать метод, который сортирует данный массив по старшинству, от самого юного
Person до самого взрослого. Использовать любой известный вам алгоритм сортировки. (Для решения данной задаче нельзя использовать встроенные методы
сортировки Java )

15.   Дан массив объектов MyDDate(int day, int month, int year). Написать метод, который сортирует даygнный массив от самой ранней даты до самой поздней.
Использовать любой известный вам алгоритм сортировки. Подсказка: естественно вам придется написать метод сравнения двух дат.
(Для решения данной задаче нельзя использовать встроенные методы сортировки Java, и встроенные способы сравнения объектов)

        */
}
