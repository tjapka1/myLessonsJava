import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class Main {
    /*
1:
–î–∞–Ω —Å–ø–∏—Å–æ–∫ Account{Person person, String iban, double balance}. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å Map<Person, Account>,
–≥–¥–µ –∫–ª—é—á–æ–º –±—É–¥–µ—Ç Person, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º —Å–ø–∏—Å–æ–∫ –µ–≥–æ —Å—á–µ—Ç–æ–≤.

2:
–î–∞–Ω —Å–ø–∏—Å–æ–∫ Person(name,age) –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Map<Person,Integer>,
–≥–¥–µ –∫–ª—é—á —ç—Ç–æ —Å–∞–º Person, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äì —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –æ–Ω –≤—Å—Ç—Ä–µ—Ç–∏–ª—Å—è –≤ —Å–ø–∏—Å–∫–µ.
–ò —á—É—Ç—å —Å–ª–æ–∂–Ω–µ–µ

3:
–î–æ–ø—É—Å—Ç–∏–º, –í—ã –ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∏–≥—Ä–∞–º –ù–•–õ (–ø—Ä–∏–≤–µ—Ç –ê–ª–µ–∫—Å–µ—é üòÄ ).
–î–æ–ø—É—Å—Ç–∏–º, —É –≤–∞—Å –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç GameInfo {String team1, String team2, int goalsTeam1, int goalsTeam2} (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ,
goalsTeam1 ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ–≤ –∑–∞–±–∏—Ç—ã—Ö –∫–æ–º–∞–Ω–¥–æ–π Team1). –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –¥–∞–Ω —Å–ø–∏—Å–æ–∫ —Ç–∞–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤.
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å Map, –≥–¥–µ –∫–ª—é—á–æ–º –±—É–¥–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±–∏—Ç—ã—Ö –≥–æ–ª–æ–≤.
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –µ—Å–ª–∏ —Å–æ–≤—Å–µ–º –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è ‚Äì –ø–æ–¥—Å–∫–∞–∑–∫–∞.

     */
    public static void main(String[] args) {

        List <Account> accounts=List.of(
                new Account(new Person("p1"), "DE01", 10),
                new Account(new Person("p2"), "DE02", 20),
                new Account(new Person("p2"), "DE02", 20),
                new Account(new Person("p3"), "DE03", 30),
                new Account(new Person("p4"), "DE04", 40),
                new Account(new Person("p5"), "DE05", 50)
        );

        Map<Person, List <Account>> nameAcc= accounts.stream()
                .collect(Collectors.groupingBy(account -> account.getPerson()));

        System.out.println(nameAcc);
        System.out.println("**************************");

        List <Person> people=List.of(
                new Person("Wasja1", 10),
                new Person("Wasja2", 20),
                new Person("Wasja1", 10),
                new Person("Wasja4", 40),
                new Person("Wasja4", 40),
                new Person("Wasja4", 40),
                new Person("Wasja5", 50),
                new Person("Wasja5", 50),
                new Person("Wasja5", 50),
                new Person("Wasja5", 50),
                new Person("Wasja5", 50)
        );


        Map <Person, Long> personCount = people.stream()
                        .collect(Collectors.groupingBy(s -> s, Collectors.counting()));

        System.out.println(personCount);
        System.out.println("**************************");

        List<GameInfo> gameInfos=List.of(
                new GameInfo("t01", "t02", 5,4),
                new GameInfo("t11", "t12", 4,2),
                new GameInfo("t01", "t11", 2,3),
                new GameInfo("t02", "t12", 4,5),
                new GameInfo("t12", "t01", 3,6)
        );
        System.out.println(gameInfos);

        Map<String, Integer>  team1GoalsMap = gameInfos.stream()
                .collect(Collectors.toMap(GameInfo::getTeam1, GameInfo::getGoalsTeam1, Integer::sum));
        Map<String, Integer> team2GoalsMap = gameInfos.stream()
                .collect(Collectors.toMap(GameInfo::getTeam2, GameInfo::getGoalsTeam2, Integer::sum));

        Map<String, Integer> allTeamsGoals = new HashMap<>();
        allTeamsGoals.putAll(team1GoalsMap);
        allTeamsGoals.putAll(team2GoalsMap);

        System.out.println(allTeamsGoals);
    }
}